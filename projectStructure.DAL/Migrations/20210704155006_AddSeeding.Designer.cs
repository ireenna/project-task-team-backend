// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectStructure.DAL;

namespace projectStructure.DAL.Migrations
{
    [DbContext(typeof(ProjectsDbContext))]
    [Migration("20210704155006_AddSeeding")]
    partial class AddSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("projectStructure.DAL.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 928, DateTimeKind.Local).AddTicks(1685),
                            Deadline = new DateTime(2021, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "unbelievable project",
                            Name = "Super cool project",
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("projectStructure.DAL.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FinishedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerformerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerformerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 928, DateTimeKind.Local).AddTicks(8486),
                            Description = "to do something",
                            Name = "First task",
                            PerformerId = 1,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 929, DateTimeKind.Local).AddTicks(3732),
                            Description = "to hack",
                            Name = "Secong task",
                            PerformerId = 2,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 929, DateTimeKind.Local).AddTicks(3772),
                            Description = "to do refactoring",
                            Name = "Third task",
                            PerformerId = 1,
                            ProjectId = 1,
                            State = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 929, DateTimeKind.Local).AddTicks(3781),
                            Description = "",
                            Name = "Final task",
                            PerformerId = 1,
                            ProjectId = 1,
                            State = 0
                        });
                });

            modelBuilder.Entity("projectStructure.DAL.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 919, DateTimeKind.Local).AddTicks(9354),
                            Name = "DreamTeam"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 926, DateTimeKind.Local).AddTicks(7116),
                            Name = "SuperTeam"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2021, 7, 4, 18, 50, 4, 926, DateTimeKind.Local).AddTicks(7204),
                            Name = "Hackers"
                        });
                });

            modelBuilder.Entity("projectStructure.DAL.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDay = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "somemail@gmail.com",
                            FirstName = "Irina",
                            LastName = "K",
                            RegisteredAt = new DateTime(2021, 7, 4, 18, 50, 4, 926, DateTimeKind.Local).AddTicks(8992),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            BirthDay = new DateTime(1975, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lalala@gmail.com",
                            FirstName = "Leo",
                            LastName = "Di Caprio",
                            RegisteredAt = new DateTime(2021, 7, 4, 18, 50, 4, 927, DateTimeKind.Local).AddTicks(5619),
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            BirthDay = new DateTime(1970, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tesla@gmail.com",
                            FirstName = "Ilon",
                            LastName = "Musk",
                            RegisteredAt = new DateTime(2021, 7, 4, 18, 50, 4, 927, DateTimeKind.Local).AddTicks(5670),
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            BirthDay = new DateTime(2000, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "superemail@gmail.com",
                            FirstName = "Super",
                            LastName = "User",
                            RegisteredAt = new DateTime(2021, 7, 4, 18, 50, 4, 927, DateTimeKind.Local).AddTicks(5681),
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("projectStructure.DAL.Project", b =>
                {
                    b.HasOne("projectStructure.DAL.User", "Author")
                        .WithMany("Projects")
                        .HasForeignKey("AuthorId");

                    b.HasOne("projectStructure.DAL.Team", "Team")
                        .WithMany("Projects")
                        .HasForeignKey("TeamId");

                    b.Navigation("Author");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("projectStructure.DAL.Tasks", b =>
                {
                    b.HasOne("projectStructure.DAL.User", "Performer")
                        .WithMany("Tasks")
                        .HasForeignKey("PerformerId");

                    b.HasOne("projectStructure.DAL.Project", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Performer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("projectStructure.DAL.User", b =>
                {
                    b.HasOne("projectStructure.DAL.Team", "Team")
                        .WithMany("Participants")
                        .HasForeignKey("TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("projectStructure.DAL.Project", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("projectStructure.DAL.Team", b =>
                {
                    b.Navigation("Participants");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("projectStructure.DAL.User", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
